#!/bin/bash
# Script to batch normalize files to EBU R 128 (-23 LUFS Integrated) or another specified target.
# Copyright Â© 2021 Elizabeth Harmon
      
# Usage: ebu-norm <option> <input files>.                          
# Option: 
#  -t   Specify integrated loudness target, e.g. -t -20         


# Select LUFS target based on -t flag or -23 LUFS default
if [ $# -eq 0 ]
then
  echo "Usage: ebu-norm <option> <input files>"
  echo "	Option:" 
  echo " 	 -t   Specify integrated loudness target, e.g. -t -20" 
  exit
elif [ "$1" = "-t" ] && [ -f "$2" ] 
then
  TARGET=-23
  shift
  echo "Please enter a value (-12 or lower) if using the -t flag"
  exit
elif [ "$1" = "-t" ] && [ "$2" -gt -12 ]
  then
  echo "Please enter an integrated value -12 or lower"
  exit	
elif [ "$1" = "-t" ] 
  then
  TARGET=$2
  echo "The target is $TARGET LUFS integrated..."
  shift ; shift
  sleep 3
else
  TARGET=-23
  echo "The target is $TARGET LUFS integrated..."
  sleep 3
fi

# Create subfolder for normalized files
path=$(realpath "$1")
dirname="${path%/*}"
mkdir -p "$dirname/ebu-norm"

# Create temp dir and audio files
TEMPDIR=$(mktemp -d)	
touch "$TEMPDIR"/audioin.$EXT
touch "$TEMPDIR"/audioout.$EXT

for file in "$@"; do
if [ "${file##*.}" == wav ] || [ "${file##*.}" == aif ] || [ "${file##*.}" == aiff ] || [ "${file##*.}" == flac ] || [ "${file##*.}" == ogg ] || [ "${file##*.}" == opus ];
then
	# Separate name of file 
	FILENAME=${file##*/}
	FNAME="${FILENAME%.*}"
	EXT="${file##*.}"

	# Loudness, peak and gain analysis
	ebur128 --full --lufs "$file" > "$TEMPDIR/la.txt"
	INT_VALUE=$(awk '/loud/ {print $3}' "$TEMPDIR/la.txt") 
	PEAK_VALUE=$(awk '/Peak/ {print $3}' "$TEMPDIR/la.txt") 
	GAIN=$(echo $TARGET "-" $INT_VALUE | bc )

  if [ $(echo $PEAK_VALUE "+" $GAIN "> -1" | bc) -eq 1 ]
  then 

	# The following SoX compand values are based on numbers in mhartzel's FreeLCS project 
	# https://github.com/mhartzel/freelcs/blob/master/LoudnessCorrection.py
	LIMITER_LEVEL=$(echo $INT_VALUE "-" $TARGET "+ -1" | bc )
	L3=$(echo $LIMITER_LEVEL "+ -3" | bc ) 
	L2=$(echo $LIMITER_LEVEL "+ -2" | bc ) 
	L1=$(echo $LIMITER_LEVEL "+ -1" | bc ) 
	L0=$(echo $LIMITER_LEVEL "+ 0" | bc ) 
	COMP_1=$(echo "compand 0.005,0.3 1:"$L3","$L3",0,"$L2)
	COMP_2=$(echo "compand 0.002,0.15 1:"$L2","$L2",0,"$L1)
	COMP_3=$(echo "compand 0.001,0.075 1:"$L1","$L1",0,"$L0)
	LIMITER=$(echo "compand 0,0 3:"$L3","$L3",0,"$L0) 

	# SoX limiter chain
	sox "$file" "$TEMPDIR/audioin.$EXT" $COMP_1
	sox "$TEMPDIR/audioin.$EXT" "$TEMPDIR/audioout.$EXT" $COMP_2
	sox "$TEMPDIR/audioout.$EXT" "$TEMPDIR/audioin.$EXT" $COMP_3
	sox "$TEMPDIR/audioin.$EXT" "$TEMPDIR/audioout.$EXT" $LIMITER

	# Second analysis pass
	ebur128 --full --lufs "$TEMPDIR/audioout.$EXT" > "$TEMPDIR/la-2ndpass.txt"
	INT_VALUE=$(awk '/loud/ {print $3}' "$TEMPDIR/la-2ndpass.txt") 
	PEAK_VALUE2=$(awk '/Peak/ {print $3}' "$TEMPDIR/la-2ndpass.txt")
	GAIN=$(echo $TARGET "-" $INT_VALUE | bc )
	PEAKR=$(echo $PEAK_VALUE "-" $PEAK_VALUE2 | bc )

	# Apply gain after limiting
	sox "$TEMPDIR/audioout.$EXT" "$dirname/ebu-norm/$FNAME-ebu-norm.$EXT" gain $GAIN
	echo	
	echo $file
	echo "$GAIN dB of gain applied with $PEAKR dB of peak limiting..."
  else
	# Apply basic gain without limiting
	sox "$file" "$dirname/ebu-norm/$FNAME-ebu-norm.$EXT" gain $GAIN
	echo	
	echo $file
	echo "$GAIN dB of gain applied..."
  fi
fi
done

rm -r "$TEMPDIR"
echo
. ${BASH_SOURCE%/*}/ebu-scan "$dirname"/ebu-norm/*
