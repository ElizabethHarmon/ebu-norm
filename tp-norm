#!/bin/bash
# Script to batch normalize files to -1 dBTP or desired true peak value
# Copyright Â© 2021 Elizabeth Harmon

# Usage: tp-norm <option> <input files>.                          
# Option: 
#  -t   Specify true peak target, e.g. -t -2 

# Select true peak target based on -t flag or -1 dBTP default
if [ $# -eq 0 ]
then
	echo "Usage: tp-norm <option> <input files>"
	echo "	Option:"
	echo "	 -t   Specify true peak target, e.g. -t -2"
	exit
elif [ "$1" = "-t" ] && [ -f "$2" ] 
then
	TARGET=-1
	shift
	echo "Please enter a true peak value (0 or lower) if using the -t flag"
	exit
elif [ "$1" = "-t" ] && [ "$2" -gt 0 ]
then
	echo "Please enter a true peak value 0 or lower"
	exit
elif [ "$1" = "-t" ] 
then
	TARGET=$2
	echo "The target is $TARGET dBTP..."
	shift ; shift
	sleep 3
else
	TARGET=-1
	echo "The target is -1 dBTP..."
	sleep 3
fi

TEMPDIR=$(mktemp -d)
touch "$TEMPDIR/skipped.txt"

# Create subfolder for normalized files
path=$(realpath "$1")
dirname="${path%/*}"
mkdir -p "$dirname/tp-norm"
SKIPPED=0

for file in "$@"; do
# Separate name of file 
FILENAME=${file##*/}
FNAME="${FILENAME%.*}"
EXT="${file##*.}"

if [ "${file##*.}" == wav ] || [ "${file##*.}" == aif ] || [ "${file##*.}" == aiff ] || [ "${file##*.}" == flac ] || [ "${file##*.}" == ogg ];
then
	# Peak and gain analysis
	PEAK_VALUE=$(ebur128 --lufs --full "$file" | awk '/Peak/ {print $3}')
	GAIN=$(echo $TARGET "-" $PEAK_VALUE | bc )

	# Apply gain
	sox "$file" "$dirname/tp-norm/$FNAME-tp-norm.$EXT" gain $GAIN
	echo	
	echo $file
	echo "$GAIN dB of gain applied..."
elif [ "${file##*.}" == mp3 ] || [ "${file##*.}" == opus ] || [ "${file##*.}" == wv ]
then
	# Convert to temp wav file	
	sox "$file" "$TEMPDIR/$FNAME-$EXT.wav"

	# Peak and gain analysis
	PEAK_VALUE=$(ebur128 --lufs --full "$TEMPDIR/$FNAME-$EXT.wav" | awk '/Peak/ {print $3}')
	GAIN=$(echo $TARGET "-" $PEAK_VALUE | bc )

	# Apply gain
	sox "$TEMPDIR/$FNAME-$EXT.wav" "$dirname/tp-norm/$FNAME-$EXT-tp-norm.wav" gain $GAIN
	echo	
	echo $file
	echo "$GAIN dB of gain applied..."

elif [ -f "$file" ]
then
	((SKIPPED=SKIPPED+1))
	echo "$file" >> "$TEMPDIR/skipped.txt"
else
:
fi
done
echo
echo "Skipped items: $SKIPPED"
cat "$TEMPDIR/skipped.txt"
rm -r "$TEMPDIR"
echo
. ${BASH_SOURCE%/*}/ebu-scan "$dirname"/tp-norm/*