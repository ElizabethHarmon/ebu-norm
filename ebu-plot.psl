# Generates Loudness plots
# uses ffmpeg to generate loudness data
# formats into csv
# uses gnuplot to draw graphs
#
# User "L5730"
# https://www.audiosciencereview.com/forum/index.php?threads/offline-loudness-lufs-plotting.19296/
#
# Usage: Powershell.exe -file <this script.ps1> -infile <some audio file> -w <img width pxls> -h <img height pxls> -outplot <output plot image path .png>

Param(
    $infile,
    $w,
    $h,
    $outplot
    )


$outcsv = "/tmp/loudnesscsv.txt"
$gnuplotcommandfile = "/tmp/gnuplotcmdfile.txt"
$gnuplot_histodata = "/tmp/gnuplot_histo_data.txt"
if(!$outplot){$outplot = "./LoudnessPlot.png"}

#
if(!$w){$w=1280}
if(!$h){$h=720}


Write-Host "Getting Loudness Data with ffmpeg."
$lufs_data = & ffmpeg -i $infile -af ebur128=peak=true -ar 4410 -f null - 2>&1
#$lufs_data | Out-File "/tmp/lufsdata.txt" -Encoding ASCII

$lra_high = ($lufs_data | select-string "LRA high:") -replace("[^0-9-.]")
$lra_low = ($lufs_data | select-string "LRA low:") -replace("[^0-9-.]")
$I_LUFS = ($lufs_data | select-string "I:      ") -replace("[^0-9-.]")
$lrange = ($lufs_data | select-string "LRA:      ") -replace("[^0-9-.]")

$artist = (($lufs_data | select-string ("ARTIST  ")) -split ": ")[1]
$album = (($lufs_data | select-string ("ALBUM  ")) -split ": ")[1]
$title = (($lufs_data | select-string ("TITLE  ")) -split ": ")[1]
$track = (($lufs_data | select-string ("TRACK  ")) -split ": ")[1]

$plottitle = @($artist, $album, $('{0:d2}' -f [int]$track), $title) -join " - "
if($plottitle -eq " -  - 00 - "){$plottitle = $infile}

Write-Host "Data Collected, now formatting to csv file."
$csv = $(
ForEach($rawentry in $lufs_data){
    $entry = if($rawentry -match "parsed_ebur128"){$rawentry}
    $array_tmsir = $entry -split(":") -split (" ") | ?{$_ -ne ""} | Select-Object -index 4,9,11,13,16,19,20

    if($array_tmsir){
        $time = $array_tmsir[0]
        $Momentary = $array_tmsir[1]
        $Short = $array_tmsir[2]
        $Integrated = $array_tmsir[3]
        $lra = $array_tmsir[4]
        $tpk_l = $array_tmsir[5]
        $tpk_r = $array_tmsir[6]

        "$([math]::Round($time,1))" + ",$Momentary,$Short,$Integrated,$lra,$tpk_l,$tpk_r"
    }
}
)
$csv | Out-String | Out-File $outcsv -Encoding ASCII
$entries = $csv.count

Write-Host "Running GNUPlot..."
$gnuplotinstructions = $(
"set terminal png truecolor size $w,$h;"
"set output '$outplot';"
"set title `"$($plottitle -replace("\\","\\"))`" noenhanced;"

<# for plotting an additional distribution plot

"set multiplot layout 1,2;"

"set datafile separator ',';"
"bin_width = 0.1;"
"bin_number(x) = floor(x/bin_width);"
"rounded(x) = bin_width * ( bin_number(x) + 0.5 );"
"set table '$gnuplot_histodata';"
"plot '$outcsv' using (rounded(`$2)):(1) smooth frequency;"
"unset table;"
"unset datafile separator;"

"set key left top;"
"stats '$gnuplot_histodata' using 2:1 nooutput;"
"set xrange [1:(STATS_max_x)];"
"set yrange [-60:0];"
"set xtics 1;"
"set ytics 6;"
"set grid;"
"plot '$gnuplot_histodata' using (`$2 * 1.41):1 smooth bezier title 'Loudness Distribution';"
"unset grid;"
"unset xrange;"
"unset yrange;"
"unset xtics;"
"unset ytics;"
"unset key;"
#>

"set datafile separator ',';"
"set key inside center top Left reverse maxrows 2 width -4;"

"set yrange [-60:3];"
"set ylabel 'Loudness (LUFS)';"
"set ytic 6;"
"set mytics 2;"

"set ytics nomirror;"
"set y2tics;"
"set y2range [0:31.5];"
"set y2tic 2;"
"set y2label 'Loudness Range (LU)';"

"set grid;"

"set xdata time;"
"set format x '%M:%S';"
"set xlabel 'Time (MM:SS)';"
"set autoscale xfix;"

#"set timefmt '%M:%S';"

#"set obj 1 rect at (($entries/10)-45),($lra_high +3) size char strlen('LRA High: $lra_high LUFS'), char 1 fc 'white' front;"
#"set label 1 'LRA High: $lra_high LUFS' at (($entries/10)-45),($lra_high +3) front center font `",10`";"
#"set obj 2 rect at (($entries/10)-45),($lra_low -3) size char strlen('LRA Low: $lra_low LUFS'), char 1 fc 'white' front;"
#"set label 2 'LRA Low: $lra_low LUFS' at (($entries/10)-45),($lra_low -3) front center font `",10`";"

"set palette model RGB defined (0 'red', 6 'red', 9 'orange', 13 'green', 21 'blue');"
"set cbrange [0:21];"
"unset colorbox;"

"plot \"
"$lra_high with filledcurves above y=$lra_low fc rgb '#00aa00' fs transparent solid 0.1 noborder title 'LRA H: $lra_high - L: $lra_low LUFS', \"
"'$outcsv' using (`$0/10):2 axes x1y1 with lines lc rgb '#ff0000' lw 1 title 'Momentary', \"
"               '' using (`$0/10):( (`$6>`$7?(`$6-`$2):(`$7-`$2)) ) : ( (`$6>`$7?(`$6-`$2):(`$7-`$2)) ) with boxes lc palette fs transparent solid 0.1 noborder axes x1y2 title 'tPLR', \"
#"               '' using (`$0/10):( (`$6>`$7?(`$6-`$2):(`$7-`$2)) ):( (`$6>`$7?(`$6-`$2):(`$7-`$2)) ) axes x1y2 with filledcurves above y1=0 fc palette z fs transparent solid 0.1 noborder title 'PLR', \"
#"               '' using (`$0/10):2 axes x1y1 with histeps lc rgb '#ff8000' notitle, \"
"               '' using (`$0/10):3 axes x1y1 with lines lc rgb '#8080ff' lw 3 title 'Short-Term', \"
"               '' using (`$0/10):4 axes x1y1 with lines lc rgb '#0000ff' lw 4 title 'Integrated: $I_LUFS LUFS', \"
"               '' using (`$0/10):5 axes x1y2 with lines lc rgb '#008000' lw 3 title 'Loudness Range: $lrange LU'; \"

) | Out-String
$gnuplotinstructions | Out-File $gnuplotcommandfile -Encoding ASCII

<#
$bytes = [System.Text.Encoding]::UTF8.GetBytes($gnuplotinstructions)
$str = [system.text.Encoding]::UTF8.GetString($bytes)
$str
#>

gnuplot "$gnuplotcommandfile"

Remove-Item -LiteralPath $outcsv
Remove-Item -LiteralPath $gnuplotcommandfile
Remove-Item -LiteralPath $gnuplot_histodata -ErrorAction silentlycontinue

# & $outplot
exit